// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

// ====== Datasource ======
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ====== User Model ======
model User {
  id          String    @id @default(uuid())
  full_name   String?   @db.VarChar(255)
  email       String    @unique @db.VarChar(255)
  username    String    @unique @db.VarChar(30)
  password    String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  created_by  String    @db.VarChar(50)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_by  String    @db.VarChar(50)
  deleted     Int       @db.SmallInt()
  token       Token[]   
  post        Post[]
  comment     Comment[]
}

// ====== Token Model ======
model Token {
  id          String    @id @default(uuid())
  token       String?   @db.Text
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user        User      @relation(fields: [user_id], references: [id])
  user_id     String    @unique @db.VarChar(255)
}

// ====== Post Model ======
model Post {
  id          String    @id @default(uuid())
  post        String    @db.Text
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  deleted     Int       @db.SmallInt()
  user        User      @relation(fields: [user_id], references: [id])
  user_id     String    @db.VarChar(255)
  comment     Comment[]
}

// ====== Comment Model ======
model Comment {
  id          String    @id @default(uuid())
  comment     String    @db.Text
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  deleted     Int       @db.SmallInt()
  post        Post      @relation(fields: [post_id], references: [id])
  post_id     String    @db.VarChar(255)
  user        User      @relation(fields: [user_id], references: [id])
  user_id     String    @db.VarChar(255)
}
